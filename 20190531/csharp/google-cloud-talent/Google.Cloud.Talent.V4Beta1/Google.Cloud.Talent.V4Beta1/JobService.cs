// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/talent/v4beta1/job_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Talent.V4Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/talent/v4beta1/job_service.proto</summary>
  public static partial class JobServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/talent/v4beta1/job_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JobServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvY2xvdWQvdGFsZW50L3Y0YmV0YTEvam9iX3NlcnZpY2UucHJv",
            "dG8SG2dvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMRocZ29vZ2xlL2FwaS9h",
            "bm5vdGF0aW9ucy5wcm90bxooZ29vZ2xlL2Nsb3VkL3RhbGVudC92NGJldGEx",
            "L2NvbW1vbi5wcm90bxopZ29vZ2xlL2Nsb3VkL3RhbGVudC92NGJldGExL2Zp",
            "bHRlcnMucHJvdG8aK2dvb2dsZS9jbG91ZC90YWxlbnQvdjRiZXRhMS9oaXN0",
            "b2dyYW0ucHJvdG8aJWdvb2dsZS9jbG91ZC90YWxlbnQvdjRiZXRhMS9qb2Iu",
            "cHJvdG8aI2dvb2dsZS9sb25ncnVubmluZy9vcGVyYXRpb25zLnByb3RvGh5n",
            "b29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8aG2dvb2dsZS9wcm90b2J1",
            "Zi9lbXB0eS5wcm90bxogZ29vZ2xlL3Byb3RvYnVmL2ZpZWxkX21hc2sucHJv",
            "dG8iUQoQQ3JlYXRlSm9iUmVxdWVzdBIOCgZwYXJlbnQYASABKAkSLQoDam9i",
            "GAIgASgLMiAuZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLkpvYiIdCg1H",
            "ZXRKb2JSZXF1ZXN0EgwKBG5hbWUYASABKAkicgoQVXBkYXRlSm9iUmVxdWVz",
            "dBItCgNqb2IYASABKAsyIC5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEu",
            "Sm9iEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZp",
            "ZWxkTWFzayIgChBEZWxldGVKb2JSZXF1ZXN0EgwKBG5hbWUYASABKAkiOAoW",
            "QmF0Y2hEZWxldGVKb2JzUmVxdWVzdBIOCgZwYXJlbnQYASABKAkSDgoGZmls",
            "dGVyGAIgASgJIpABCg9MaXN0Sm9ic1JlcXVlc3QSDgoGcGFyZW50GAEgASgJ",
            "Eg4KBmZpbHRlchgCIAEoCRISCgpwYWdlX3Rva2VuGAMgASgJEhEKCXBhZ2Vf",
            "c2l6ZRgEIAEoBRI2Cghqb2JfdmlldxgFIAEoDjIkLmdvb2dsZS5jbG91ZC50",
            "YWxlbnQudjRiZXRhMS5Kb2JWaWV3IpwBChBMaXN0Sm9ic1Jlc3BvbnNlEi4K",
            "BGpvYnMYASADKAsyIC5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuSm9i",
            "EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRI/CghtZXRhZGF0YRgDIAEoCzIt",
            "Lmdvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMS5SZXNwb25zZU1ldGFkYXRh",
            "IqAJChFTZWFyY2hKb2JzUmVxdWVzdBIOCgZwYXJlbnQYASABKAkSTgoLc2Vh",
            "cmNoX21vZGUYAiABKA4yOS5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEu",
            "U2VhcmNoSm9ic1JlcXVlc3QuU2VhcmNoTW9kZRJGChByZXF1ZXN0X21ldGFk",
            "YXRhGAMgASgLMiwuZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLlJlcXVl",
            "c3RNZXRhZGF0YRI4Cglqb2JfcXVlcnkYBCABKAsyJS5nb29nbGUuY2xvdWQu",
            "dGFsZW50LnY0YmV0YTEuSm9iUXVlcnkSGQoRZW5hYmxlX2Jyb2FkZW5pbmcY",
            "BSABKAgSIwobcmVxdWlyZV9wcmVjaXNlX3Jlc3VsdF9zaXplGAYgASgIEkYK",
            "EWhpc3RvZ3JhbV9xdWVyaWVzGAcgAygLMisuZ29vZ2xlLmNsb3VkLnRhbGVu",
            "dC52NGJldGExLkhpc3RvZ3JhbVF1ZXJ5EjYKCGpvYl92aWV3GAggASgOMiQu",
            "Z29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLkpvYlZpZXcSDgoGb2Zmc2V0",
            "GAkgASgFEhEKCXBhZ2Vfc2l6ZRgKIAEoBRISCgpwYWdlX3Rva2VuGAsgASgJ",
            "EhAKCG9yZGVyX2J5GAwgASgJEmIKFWRpdmVyc2lmaWNhdGlvbl9sZXZlbBgN",
            "IAEoDjJDLmdvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMS5TZWFyY2hKb2Jz",
            "UmVxdWVzdC5EaXZlcnNpZmljYXRpb25MZXZlbBJdChNjdXN0b21fcmFua2lu",
            "Z19pbmZvGA4gASgLMkAuZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLlNl",
            "YXJjaEpvYnNSZXF1ZXN0LkN1c3RvbVJhbmtpbmdJbmZvEh0KFWRpc2FibGVf",
            "a2V5d29yZF9tYXRjaBgQIAEoCBqQAgoRQ3VzdG9tUmFua2luZ0luZm8SagoQ",
            "aW1wb3J0YW5jZV9sZXZlbBgBIAEoDjJQLmdvb2dsZS5jbG91ZC50YWxlbnQu",
            "djRiZXRhMS5TZWFyY2hKb2JzUmVxdWVzdC5DdXN0b21SYW5raW5nSW5mby5J",
            "bXBvcnRhbmNlTGV2ZWwSGgoScmFua2luZ19leHByZXNzaW9uGAIgASgJInMK",
            "D0ltcG9ydGFuY2VMZXZlbBIgChxJTVBPUlRBTkNFX0xFVkVMX1VOU1BFQ0lG",
            "SUVEEAASCAoETk9ORRABEgcKA0xPVxACEggKBE1JTEQQAxIKCgZNRURJVU0Q",
            "BBIICgRISUdIEAUSCwoHRVhUUkVNRRAGIlIKClNlYXJjaE1vZGUSGwoXU0VB",
            "UkNIX01PREVfVU5TUEVDSUZJRUQQABIOCgpKT0JfU0VBUkNIEAESFwoTRkVB",
            "VFVSRURfSk9CX1NFQVJDSBACIlcKFERpdmVyc2lmaWNhdGlvbkxldmVsEiUK",
            "IURJVkVSU0lGSUNBVElPTl9MRVZFTF9VTlNQRUNJRklFRBAAEgwKCERJU0FC",
            "TEVEEAESCgoGU0lNUExFEAIi1wYKElNlYXJjaEpvYnNSZXNwb25zZRJSCg1t",
            "YXRjaGluZ19qb2JzGAEgAygLMjsuZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJl",
            "dGExLlNlYXJjaEpvYnNSZXNwb25zZS5NYXRjaGluZ0pvYhJSChdoaXN0b2dy",
            "YW1fcXVlcnlfcmVzdWx0cxgCIAMoCzIxLmdvb2dsZS5jbG91ZC50YWxlbnQu",
            "djRiZXRhMS5IaXN0b2dyYW1RdWVyeVJlc3VsdBIXCg9uZXh0X3BhZ2VfdG9r",
            "ZW4YAyABKAkSPwoQbG9jYXRpb25fZmlsdGVycxgEIAMoCzIlLmdvb2dsZS5j",
            "bG91ZC50YWxlbnQudjRiZXRhMS5Mb2NhdGlvbhIcChRlc3RpbWF0ZWRfdG90",
            "YWxfc2l6ZRgFIAEoBRISCgp0b3RhbF9zaXplGAYgASgFEj8KCG1ldGFkYXRh",
            "GAcgASgLMi0uZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLlJlc3BvbnNl",
            "TWV0YWRhdGESIgoaYnJvYWRlbmVkX3F1ZXJ5X2pvYnNfY291bnQYCCABKAUS",
            "SQoQc3BlbGxfY29ycmVjdGlvbhgJIAEoCzIvLmdvb2dsZS5jbG91ZC50YWxl",
            "bnQudjRiZXRhMS5TcGVsbGluZ0NvcnJlY3Rpb24a3AEKC01hdGNoaW5nSm9i",
            "Ei0KA2pvYhgBIAEoCzIgLmdvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMS5K",
            "b2ISEwoLam9iX3N1bW1hcnkYAiABKAkSGQoRam9iX3RpdGxlX3NuaXBwZXQY",
            "AyABKAkSGwoTc2VhcmNoX3RleHRfc25pcHBldBgEIAEoCRJRCgxjb21tdXRl",
            "X2luZm8YBSABKAsyOy5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuU2Vh",
            "cmNoSm9ic1Jlc3BvbnNlLkNvbW11dGVJbmZvGn4KC0NvbW11dGVJbmZvEjsK",
            "DGpvYl9sb2NhdGlvbhgBIAEoCzIlLmdvb2dsZS5jbG91ZC50YWxlbnQudjRi",
            "ZXRhMS5Mb2NhdGlvbhIyCg90cmF2ZWxfZHVyYXRpb24YAiABKAsyGS5nb29n",
            "bGUucHJvdG9idWYuRHVyYXRpb24qdgoHSm9iVmlldxIYChRKT0JfVklFV19V",
            "TlNQRUNJRklFRBAAEhQKEEpPQl9WSUVXX0lEX09OTFkQARIUChBKT0JfVklF",
            "V19NSU5JTUFMEAISEgoOSk9CX1ZJRVdfU01BTEwQAxIRCg1KT0JfVklFV19G",
            "VUxMEAQy4gwKCkpvYlNlcnZpY2USvAEKCUNyZWF0ZUpvYhItLmdvb2dsZS5j",
            "bG91ZC50YWxlbnQudjRiZXRhMS5DcmVhdGVKb2JSZXF1ZXN0GiAuZ29vZ2xl",
            "LmNsb3VkLnRhbGVudC52NGJldGExLkpvYiJegtPkkwJYIisvdjRiZXRhMS97",
            "cGFyZW50PXByb2plY3RzLyovdGVuYW50cy8qfS9qb2JzOgEqWiYiIS92NGJl",
            "dGExL3twYXJlbnQ9cHJvamVjdHMvKn0vam9iczoBKhKwAQoGR2V0Sm9iEiou",
            "Z29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLkdldEpvYlJlcXVlc3QaIC5n",
            "b29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuSm9iIliC0+STAlISKy92NGJl",
            "dGExL3tuYW1lPXByb2plY3RzLyovdGVuYW50cy8qL2pvYnMvKn1aIxIhL3Y0",
            "YmV0YTEve25hbWU9cHJvamVjdHMvKi9qb2JzLyp9EsQBCglVcGRhdGVKb2IS",
            "LS5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuVXBkYXRlSm9iUmVxdWVz",
            "dBogLmdvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMS5Kb2IiZoLT5JMCYDIv",
            "L3Y0YmV0YTEve2pvYi5uYW1lPXByb2plY3RzLyovdGVuYW50cy8qL2pvYnMv",
            "Kn06ASpaKjIlL3Y0YmV0YTEve2pvYi5uYW1lPXByb2plY3RzLyovam9icy8q",
            "fToBKhKsAQoJRGVsZXRlSm9iEi0uZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJl",
            "dGExLkRlbGV0ZUpvYlJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "WILT5JMCUiorL3Y0YmV0YTEve25hbWU9cHJvamVjdHMvKi90ZW5hbnRzLyov",
            "am9icy8qfVojKiEvdjRiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2pvYnMvKn0S",
            "wQEKCExpc3RKb2JzEiwuZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLkxp",
            "c3RKb2JzUmVxdWVzdBotLmdvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMS5M",
            "aXN0Sm9ic1Jlc3BvbnNlIliC0+STAlISKy92NGJldGExL3twYXJlbnQ9cHJv",
            "amVjdHMvKi90ZW5hbnRzLyp9L2pvYnNaIxIhL3Y0YmV0YTEve3BhcmVudD1w",
            "cm9qZWN0cy8qfS9qb2JzEtMBCg9CYXRjaERlbGV0ZUpvYnMSMy5nb29nbGUu",
            "Y2xvdWQudGFsZW50LnY0YmV0YTEuQmF0Y2hEZWxldGVKb2JzUmVxdWVzdBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJzgtPkkwJtIjcvdjRiZXRhMS97cGFy",
            "ZW50PXByb2plY3RzLyovdGVuYW50cy8qfS9qb2JzOmJhdGNoRGVsZXRlOgEq",
            "Wi8iLS92NGJldGExL3twYXJlbnQ9cHJvamVjdHMvKn0vam9iczpiYXRjaERl",
            "bGV0ZRLbAQoKU2VhcmNoSm9icxIuLmdvb2dsZS5jbG91ZC50YWxlbnQudjRi",
            "ZXRhMS5TZWFyY2hKb2JzUmVxdWVzdBovLmdvb2dsZS5jbG91ZC50YWxlbnQu",
            "djRiZXRhMS5TZWFyY2hKb2JzUmVzcG9uc2UibILT5JMCZiIyL3Y0YmV0YTEv",
            "e3BhcmVudD1wcm9qZWN0cy8qL3RlbmFudHMvKn0vam9iczpzZWFyY2g6ASpa",
            "LSIoL3Y0YmV0YTEve3BhcmVudD1wcm9qZWN0cy8qfS9qb2JzOnNlYXJjaDoB",
            "KhLzAQoSU2VhcmNoSm9ic0ZvckFsZXJ0Ei4uZ29vZ2xlLmNsb3VkLnRhbGVu",
            "dC52NGJldGExLlNlYXJjaEpvYnNSZXF1ZXN0Gi8uZ29vZ2xlLmNsb3VkLnRh",
            "bGVudC52NGJldGExLlNlYXJjaEpvYnNSZXNwb25zZSJ8gtPkkwJ2IjovdjRi",
            "ZXRhMS97cGFyZW50PXByb2plY3RzLyovdGVuYW50cy8qfS9qb2JzOnNlYXJj",
            "aEZvckFsZXJ0OgEqWjUiMC92NGJldGExL3twYXJlbnQ9cHJvamVjdHMvKn0v",
            "am9iczpzZWFyY2hGb3JBbGVydDoBKkJ9Ch9jb20uZ29vZ2xlLmNsb3VkLnRh",
            "bGVudC52NGJldGExQg9Kb2JTZXJ2aWNlUHJvdG9QAVpBZ29vZ2xlLmdvbGFu",
            "Zy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC90YWxlbnQvdjRiZXRh",
            "MTt0YWxlbnSiAgNDVFNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor, global::Google.Cloud.Talent.V4Beta1.FiltersReflection.Descriptor, global::Google.Cloud.Talent.V4Beta1.HistogramReflection.Descriptor, global::Google.Cloud.Talent.V4Beta1.JobReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Talent.V4Beta1.JobView), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.CreateJobRequest), global::Google.Cloud.Talent.V4Beta1.CreateJobRequest.Parser, new[]{ "Parent", "Job" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.GetJobRequest), global::Google.Cloud.Talent.V4Beta1.GetJobRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.UpdateJobRequest), global::Google.Cloud.Talent.V4Beta1.UpdateJobRequest.Parser, new[]{ "Job", "UpdateMask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.DeleteJobRequest), global::Google.Cloud.Talent.V4Beta1.DeleteJobRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.BatchDeleteJobsRequest), global::Google.Cloud.Talent.V4Beta1.BatchDeleteJobsRequest.Parser, new[]{ "Parent", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.ListJobsRequest), global::Google.Cloud.Talent.V4Beta1.ListJobsRequest.Parser, new[]{ "Parent", "Filter", "PageToken", "PageSize", "JobView" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.ListJobsResponse), global::Google.Cloud.Talent.V4Beta1.ListJobsResponse.Parser, new[]{ "Jobs", "NextPageToken", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest), global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Parser, new[]{ "Parent", "SearchMode", "RequestMetadata", "JobQuery", "EnableBroadening", "RequirePreciseResultSize", "HistogramQueries", "JobView", "Offset", "PageSize", "PageToken", "OrderBy", "DiversificationLevel", "CustomRankingInfo", "DisableKeywordMatch" }, null, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.SearchMode), typeof(global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.DiversificationLevel) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo), global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo.Parser, new[]{ "ImportanceLevel", "RankingExpression" }, null, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo.Types.ImportanceLevel) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse), global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Parser, new[]{ "MatchingJobs", "HistogramQueryResults", "NextPageToken", "LocationFilters", "EstimatedTotalSize", "TotalSize", "Metadata", "BroadenedQueryJobsCount", "SpellCorrection" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.MatchingJob), global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.MatchingJob.Parser, new[]{ "Job", "JobSummary", "JobTitleSnippet", "SearchTextSnippet", "CommuteInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.CommuteInfo), global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.CommuteInfo.Parser, new[]{ "JobLocation", "TravelDuration" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// An enum that specifies the job attributes that are returned in the
  /// [MatchingJob.Job][] in [SearchJobsResponse][google.cloud.talent.v4beta1.SearchJobsResponse] or [Job][google.cloud.talent.v4beta1.Job] objects in
  /// [ListJobsResponse][google.cloud.talent.v4beta1.ListJobsResponse].
  /// </summary>
  public enum JobView {
    /// <summary>
    /// Default value.
    /// </summary>
    [pbr::OriginalName("JOB_VIEW_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// A ID only view of job, with following attributes:
    /// [Job.name][google.cloud.talent.v4beta1.Job.name], [Job.requisition_id][google.cloud.talent.v4beta1.Job.requisition_id], [Job.language_code][google.cloud.talent.v4beta1.Job.language_code].
    /// </summary>
    [pbr::OriginalName("JOB_VIEW_ID_ONLY")] IdOnly = 1,
    /// <summary>
    /// A minimal view of the job, with the following attributes:
    /// [Job.name][google.cloud.talent.v4beta1.Job.name], [Job.requisition_id][google.cloud.talent.v4beta1.Job.requisition_id], [Job.job_title][],
    /// [Job.company][google.cloud.talent.v4beta1.Job.company], [Job.DerivedInfo.locations][google.cloud.talent.v4beta1.Job.DerivedInfo.locations], [Job.language_code][google.cloud.talent.v4beta1.Job.language_code].
    /// </summary>
    [pbr::OriginalName("JOB_VIEW_MINIMAL")] Minimal = 2,
    /// <summary>
    /// A small view of the job, with the following attributes in the search
    /// results: [Job.name][google.cloud.talent.v4beta1.Job.name], [Job.requisition_id][google.cloud.talent.v4beta1.Job.requisition_id], [Job.job_title][],
    /// [Job.company][google.cloud.talent.v4beta1.Job.company], [Job.DerivedInfo.locations][google.cloud.talent.v4beta1.Job.DerivedInfo.locations], [Job.visibility][google.cloud.talent.v4beta1.Job.visibility],
    /// [Job.language_code][google.cloud.talent.v4beta1.Job.language_code], [Job.description][google.cloud.talent.v4beta1.Job.description].
    /// </summary>
    [pbr::OriginalName("JOB_VIEW_SMALL")] Small = 3,
    /// <summary>
    /// All available attributes are included in the search results.
    /// </summary>
    [pbr::OriginalName("JOB_VIEW_FULL")] Full = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Input only.
  ///
  /// Create job request.
  /// </summary>
  public sealed partial class CreateJobRequest : pb::IMessage<CreateJobRequest> {
    private static readonly pb::MessageParser<CreateJobRequest> _parser = new pb::MessageParser<CreateJobRequest>(() => new CreateJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobRequest(CreateJobRequest other) : this() {
      parent_ = other.parent_;
      job_ = other.job_ != null ? other.job_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobRequest Clone() {
      return new CreateJobRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required.
    ///
    /// The resource name of the tenant under which the job is created.
    ///
    /// The format is "projects/{project_id}/tenants/{tenant_id}", for example,
    /// "projects/api-test-project/tenant/foo".
    ///
    /// Tenant id is optional and a default tenant is created if unspecified, for
    /// example, "projects/api-test-project".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job" field.</summary>
    public const int JobFieldNumber = 2;
    private global::Google.Cloud.Talent.V4Beta1.Job job_;
    /// <summary>
    /// Required.
    ///
    /// The Job to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.Job Job {
      get { return job_; }
      set {
        job_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Job, other.Job)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (job_ != null) hash ^= Job.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (job_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Job);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (job_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Job);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.job_ != null) {
        if (job_ == null) {
          Job = new global::Google.Cloud.Talent.V4Beta1.Job();
        }
        Job.MergeFrom(other.Job);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (job_ == null) {
              Job = new global::Google.Cloud.Talent.V4Beta1.Job();
            }
            input.ReadMessage(Job);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Input only.
  ///
  /// Get job request.
  /// </summary>
  public sealed partial class GetJobRequest : pb::IMessage<GetJobRequest> {
    private static readonly pb::MessageParser<GetJobRequest> _parser = new pb::MessageParser<GetJobRequest>(() => new GetJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobRequest(GetJobRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobRequest Clone() {
      return new GetJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required.
    ///
    /// The resource name of the job to retrieve.
    ///
    /// The format is
    /// "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}", for
    /// example, "projects/api-test-project/tenants/foo/jobs/1234".
    ///
    /// Tenant id is optional and the default tenant is used if unspecified, for
    /// example, "projects/api-test-project/jobs/1234".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Input only.
  ///
  /// Update job request.
  /// </summary>
  public sealed partial class UpdateJobRequest : pb::IMessage<UpdateJobRequest> {
    private static readonly pb::MessageParser<UpdateJobRequest> _parser = new pb::MessageParser<UpdateJobRequest>(() => new UpdateJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRequest(UpdateJobRequest other) : this() {
      job_ = other.job_ != null ? other.job_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRequest Clone() {
      return new UpdateJobRequest(this);
    }

    /// <summary>Field number for the "job" field.</summary>
    public const int JobFieldNumber = 1;
    private global::Google.Cloud.Talent.V4Beta1.Job job_;
    /// <summary>
    /// Required.
    ///
    /// The Job to be updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.Job Job {
      get { return job_; }
      set {
        job_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Optional but strongly recommended to be provided for the best service
    /// experience.
    ///
    /// If [update_mask][google.cloud.talent.v4beta1.UpdateJobRequest.update_mask] is provided, only the specified fields in
    /// [job][google.cloud.talent.v4beta1.UpdateJobRequest.job] are updated. Otherwise all the fields are updated.
    ///
    /// A field mask to restrict the fields that are updated. Only
    /// top level fields of [Job][google.cloud.talent.v4beta1.Job] are supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Job, other.Job)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (job_ != null) hash ^= Job.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (job_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Job);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (job_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Job);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.job_ != null) {
        if (job_ == null) {
          Job = new global::Google.Cloud.Talent.V4Beta1.Job();
        }
        Job.MergeFrom(other.Job);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (job_ == null) {
              Job = new global::Google.Cloud.Talent.V4Beta1.Job();
            }
            input.ReadMessage(Job);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Input only.
  ///
  /// Delete job request.
  /// </summary>
  public sealed partial class DeleteJobRequest : pb::IMessage<DeleteJobRequest> {
    private static readonly pb::MessageParser<DeleteJobRequest> _parser = new pb::MessageParser<DeleteJobRequest>(() => new DeleteJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteJobRequest(DeleteJobRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteJobRequest Clone() {
      return new DeleteJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required.
    ///
    /// The resource name of the job to be deleted.
    ///
    /// The format is
    /// "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}", for
    /// example, "projects/api-test-project/tenants/foo/jobs/1234".
    ///
    /// Tenant id is optional and the default tenant is used if unspecified, for
    /// example, "projects/api-test-project/jobs/1234".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Input only.
  ///
  /// Batch delete jobs request.
  /// </summary>
  public sealed partial class BatchDeleteJobsRequest : pb::IMessage<BatchDeleteJobsRequest> {
    private static readonly pb::MessageParser<BatchDeleteJobsRequest> _parser = new pb::MessageParser<BatchDeleteJobsRequest>(() => new BatchDeleteJobsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchDeleteJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDeleteJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDeleteJobsRequest(BatchDeleteJobsRequest other) : this() {
      parent_ = other.parent_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDeleteJobsRequest Clone() {
      return new BatchDeleteJobsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required.
    ///
    /// The resource name of the tenant under which the job is created.
    ///
    /// The format is "projects/{project_id}/tenants/{tenant_id}", for example,
    /// "projects/api-test-project/tenant/foo".
    ///
    /// Tenant id is optional and the default tenant is used if unspecified, for
    /// example, "projects/api-test-project".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// Required.
    ///
    /// The filter string specifies the jobs to be deleted.
    ///
    /// Supported operator: =, AND
    ///
    /// The fields eligible for filtering are:
    ///
    /// * `companyName` (Required)
    /// * `requisitionId` (Required)
    ///
    /// Sample Query: companyName = "projects/api-test-project/companies/123" AND
    /// requisitionId = "req-1"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchDeleteJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchDeleteJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchDeleteJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Input only.
  ///
  /// List jobs request.
  /// </summary>
  public sealed partial class ListJobsRequest : pb::IMessage<ListJobsRequest> {
    private static readonly pb::MessageParser<ListJobsRequest> _parser = new pb::MessageParser<ListJobsRequest>(() => new ListJobsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest(ListJobsRequest other) : this() {
      parent_ = other.parent_;
      filter_ = other.filter_;
      pageToken_ = other.pageToken_;
      pageSize_ = other.pageSize_;
      jobView_ = other.jobView_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest Clone() {
      return new ListJobsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required.
    ///
    /// The resource name of the tenant under which the job is created.
    ///
    /// The format is "projects/{project_id}/tenants/{tenant_id}", for example,
    /// "projects/api-test-project/tenant/foo".
    ///
    /// Tenant id is optional and the default tenant is used if unspecified, for
    /// example, "projects/api-test-project".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// Required.
    ///
    /// The filter string specifies the jobs to be enumerated.
    ///
    /// Supported operator: =, AND
    ///
    /// The fields eligible for filtering are:
    ///
    /// * `companyName` (Required)
    /// * `requisitionId` (Optional)
    /// * `status` (Optional) Available values: OPEN, EXPIRED, ALL. Defaults to
    /// OPEN if no value is specified.
    ///
    /// Sample Query:
    ///
    /// * companyName = "projects/api-test-project/tenants/foo/companies/bar"
    /// * companyName = "projects/api-test-project/tenants/foo/companies/bar" AND
    /// requisitionId = "req-1"
    /// * companyName = "projects/api-test-project/tenants/foo/companies/bar" AND
    /// status = "EXPIRED"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional.
    ///
    /// The starting point of a query result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 4;
    private int pageSize_;
    /// <summary>
    /// Optional.
    ///
    /// The maximum number of jobs to be returned per page of results.
    ///
    /// If [job_view][google.cloud.talent.v4beta1.ListJobsRequest.job_view] is set to [JobView.JOB_VIEW_ID_ONLY][google.cloud.talent.v4beta1.JobView.JOB_VIEW_ID_ONLY], the maximum allowed
    /// page size is 1000. Otherwise, the maximum allowed page size is 100.
    ///
    /// Default is 100 if empty or a number &lt; 1 is specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "job_view" field.</summary>
    public const int JobViewFieldNumber = 5;
    private global::Google.Cloud.Talent.V4Beta1.JobView jobView_ = 0;
    /// <summary>
    /// Optional.
    ///
    /// The desired job attributes returned for jobs in the
    /// search response. Defaults to [JobView.JOB_VIEW_FULL][google.cloud.talent.v4beta1.JobView.JOB_VIEW_FULL] if no value is
    /// specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.JobView JobView {
      get { return jobView_; }
      set {
        jobView_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      if (PageToken != other.PageToken) return false;
      if (PageSize != other.PageSize) return false;
      if (JobView != other.JobView) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (JobView != 0) hash ^= JobView.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PageSize);
      }
      if (JobView != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) JobView);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (JobView != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JobView);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.JobView != 0) {
        JobView = other.JobView;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            PageSize = input.ReadInt32();
            break;
          }
          case 40: {
            JobView = (global::Google.Cloud.Talent.V4Beta1.JobView) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Output only.
  ///
  /// List jobs response.
  /// </summary>
  public sealed partial class ListJobsResponse : pb::IMessage<ListJobsResponse> {
    private static readonly pb::MessageParser<ListJobsResponse> _parser = new pb::MessageParser<ListJobsResponse>(() => new ListJobsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse(ListJobsResponse other) : this() {
      jobs_ = other.jobs_.Clone();
      nextPageToken_ = other.nextPageToken_;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse Clone() {
      return new ListJobsResponse(this);
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.Job> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Talent.V4Beta1.Job.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.Job> jobs_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.Job>();
    /// <summary>
    /// The Jobs for a given company.
    ///
    /// The maximum number of items returned is based on the limit field
    /// provided in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.Job> Jobs {
      get { return jobs_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token to retrieve the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 3;
    private global::Google.Cloud.Talent.V4Beta1.ResponseMetadata metadata_;
    /// <summary>
    /// Additional information for the API invocation, such as the request
    /// tracking id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.ResponseMetadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jobs_.Equals(other.jobs_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jobs_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      jobs_.WriteTo(output, _repeated_jobs_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (metadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobsResponse other) {
      if (other == null) {
        return;
      }
      jobs_.Add(other.jobs_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Google.Cloud.Talent.V4Beta1.ResponseMetadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            if (metadata_ == null) {
              Metadata = new global::Google.Cloud.Talent.V4Beta1.ResponseMetadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Input only.
  ///
  /// The Request body of the `SearchJobs` call.
  /// </summary>
  public sealed partial class SearchJobsRequest : pb::IMessage<SearchJobsRequest> {
    private static readonly pb::MessageParser<SearchJobsRequest> _parser = new pb::MessageParser<SearchJobsRequest>(() => new SearchJobsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchJobsRequest(SearchJobsRequest other) : this() {
      parent_ = other.parent_;
      searchMode_ = other.searchMode_;
      requestMetadata_ = other.requestMetadata_ != null ? other.requestMetadata_.Clone() : null;
      jobQuery_ = other.jobQuery_ != null ? other.jobQuery_.Clone() : null;
      enableBroadening_ = other.enableBroadening_;
      requirePreciseResultSize_ = other.requirePreciseResultSize_;
      histogramQueries_ = other.histogramQueries_.Clone();
      jobView_ = other.jobView_;
      offset_ = other.offset_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      orderBy_ = other.orderBy_;
      diversificationLevel_ = other.diversificationLevel_;
      customRankingInfo_ = other.customRankingInfo_ != null ? other.customRankingInfo_.Clone() : null;
      disableKeywordMatch_ = other.disableKeywordMatch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchJobsRequest Clone() {
      return new SearchJobsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required.
    ///
    /// The resource name of the tenant to search within.
    ///
    /// The format is "projects/{project_id}/tenants/{tenant_id}", for example,
    /// "projects/api-test-project/tenant/foo".
    ///
    /// Tenant id is optional and the default tenant is used if unspecified, for
    /// example, "projects/api-test-project".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "search_mode" field.</summary>
    public const int SearchModeFieldNumber = 2;
    private global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.SearchMode searchMode_ = 0;
    /// <summary>
    /// Optional.
    ///
    /// Mode of a search.
    ///
    /// Defaults to [SearchMode.JOB_SEARCH][google.cloud.talent.v4beta1.SearchJobsRequest.SearchMode.JOB_SEARCH].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.SearchMode SearchMode {
      get { return searchMode_; }
      set {
        searchMode_ = value;
      }
    }

    /// <summary>Field number for the "request_metadata" field.</summary>
    public const int RequestMetadataFieldNumber = 3;
    private global::Google.Cloud.Talent.V4Beta1.RequestMetadata requestMetadata_;
    /// <summary>
    /// Required.
    ///
    /// The meta information collected about the job searcher, used to improve the
    /// search quality of the service.. The identifiers, (such as `user_id`) are
    /// provided by users, and must be unique and consistent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.RequestMetadata RequestMetadata {
      get { return requestMetadata_; }
      set {
        requestMetadata_ = value;
      }
    }

    /// <summary>Field number for the "job_query" field.</summary>
    public const int JobQueryFieldNumber = 4;
    private global::Google.Cloud.Talent.V4Beta1.JobQuery jobQuery_;
    /// <summary>
    /// Optional.
    ///
    /// Query used to search against jobs, such as keyword, location filters, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.JobQuery JobQuery {
      get { return jobQuery_; }
      set {
        jobQuery_ = value;
      }
    }

    /// <summary>Field number for the "enable_broadening" field.</summary>
    public const int EnableBroadeningFieldNumber = 5;
    private bool enableBroadening_;
    /// <summary>
    /// Optional.
    ///
    /// Controls whether to broaden the search when it produces sparse results.
    /// Broadened queries append results to the end of the matching results
    /// list.
    ///
    /// Defaults to false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableBroadening {
      get { return enableBroadening_; }
      set {
        enableBroadening_ = value;
      }
    }

    /// <summary>Field number for the "require_precise_result_size" field.</summary>
    public const int RequirePreciseResultSizeFieldNumber = 6;
    private bool requirePreciseResultSize_;
    /// <summary>
    /// Optional.
    ///
    /// Controls if the search job request requires the return of a precise
    /// count of the first 300 results. Setting this to `true` ensures
    /// consistency in the number of results per page. Best practice is to set this
    /// value to true if a client allows users to jump directly to a
    /// non-sequential search results page.
    ///
    /// Enabling this flag may adversely impact performance.
    ///
    /// Defaults to false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequirePreciseResultSize {
      get { return requirePreciseResultSize_; }
      set {
        requirePreciseResultSize_ = value;
      }
    }

    /// <summary>Field number for the "histogram_queries" field.</summary>
    public const int HistogramQueriesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.HistogramQuery> _repeated_histogramQueries_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Cloud.Talent.V4Beta1.HistogramQuery.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.HistogramQuery> histogramQueries_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.HistogramQuery>();
    /// <summary>
    /// Optional.
    ///
    /// An expression specifies a histogram request against matching jobs.
    ///
    /// Expression syntax is an aggregation function call with histogram facets and
    /// other options.
    ///
    /// Available aggregation function calls are:
    /// * `count(string_histogram_facet)`: Count the number of matching entities,
    /// for each distinct attribute value.
    /// * `count(numeric_histogram_facet, list of buckets)`: Count the number of
    /// matching entities within each bucket.
    ///
    /// Data types:
    ///
    /// * Histogram facet: facet names with format [a-zA-Z][a-zA-Z0-9_]+.
    /// * String: string like "any string with backslash escape for quote(\")."
    /// * Number: whole number and floating point number like 10, -1 and -0.01.
    /// * List: list of elements with comma(,) separator surrounded by square
    /// brackets, for example, [1, 2, 3] and ["one", "two", "three"].
    ///
    /// Built-in constants:
    ///
    /// * MIN (minimum number similar to java Double.MIN_VALUE)
    /// * MAX (maximum number similar to java Double.MAX_VALUE)
    ///
    /// Built-in functions:
    ///
    /// * bucket(start, end[, label]): bucket built-in function creates a bucket
    /// with range of [start, end). Note that the end is exclusive, for example,
    /// bucket(1, MAX, "positive number") or bucket(1, 10).
    ///
    /// Job histogram facets:
    ///
    /// * company_id: histogram by [Job.distributor_company_id][].
    /// * company_display_name: histogram by [Job.company_display_name][google.cloud.talent.v4beta1.Job.company_display_name].
    /// * employment_type: histogram by [Job.employment_types][google.cloud.talent.v4beta1.Job.employment_types], for example,
    /// "FULL_TIME", "PART_TIME".
    /// * company_size: histogram by [CompanySize][google.cloud.talent.v4beta1.CompanySize], for example, "SMALL",
    /// "MEDIUM", "BIG".
    /// * publish_time_in_month: histogram by the [Job.publish_time][] in months.
    /// Must specify list of numeric buckets in spec.
    /// * publish_time_in_year: histogram by the [Job.publish_time][] in years.
    /// Must specify list of numeric buckets in spec.
    /// * degree_type: histogram by the [Job.degree_type][], for example,
    /// "Bachelors", "Masters".
    /// * job_level: histogram by the [Job.job_level][google.cloud.talent.v4beta1.Job.job_level], for example, "Entry
    /// Level".
    /// * country: histogram by the country code of jobs, for example, "US", "FR".
    /// * admin1: histogram by the admin1 code of jobs, which is a global
    /// placeholder referring to the state, province, or the particular term a
    /// country uses to define the geographic structure below the country level,
    /// for example, "CA", "IL".
    /// * city: histogram by a combination of the "city name, admin1 code". For
    /// example,  "Mountain View, CA", "New York, NY".
    /// * admin1_country: histogram by a combination of the "admin1 code, country",
    /// for example, "CA, US", "IL, US".
    /// * city_coordinate: histogram by the city center's GPS coordinates (latitude
    /// and longitude), for example, 37.4038522,-122.0987765. Since the coordinates
    /// of a city center can change, customers may need to refresh them
    /// periodically.
    /// * locale: histogram by the [Job.language_code][google.cloud.talent.v4beta1.Job.language_code], for example, "en-US",
    /// "fr-FR".
    /// * language: histogram by the language subtag of the [Job.language_code][google.cloud.talent.v4beta1.Job.language_code],
    /// for example, "en", "fr".
    /// * category: histogram by the [JobCategory][google.cloud.talent.v4beta1.JobCategory], for example,
    /// "COMPUTER_AND_IT", "HEALTHCARE".
    /// * base_compensation_unit: histogram by the [CompensationUnit][] of base
    /// salary, for example, "WEEKLY", "MONTHLY".
    /// * base_compensation: histogram by the base salary. Must specify list of
    /// numeric buckets to group results by.
    /// * annualized_base_compensation: histogram by the base annualized salary.
    /// Must specify list of numeric buckets to group results by.
    /// * annualized_total_compensation: histogram by the total annualized salary.
    /// Must specify list of numeric buckets to group results by.
    /// * string_custom_attribute: histogram by string [Job.custom_attributes][google.cloud.talent.v4beta1.Job.custom_attributes].
    /// Values can be accessed via square bracket notations like
    /// string_custom_attribute["key1"].
    /// * numeric_custom_attribute: histogram by numeric [Job.custom_attributes][google.cloud.talent.v4beta1.Job.custom_attributes].
    /// Values can be accessed via square bracket notations like
    /// numeric_custom_attribute["key1"]. Must specify list of numeric buckets to
    /// group results by.
    ///
    /// Example expressions:
    /// * count(admin1)
    /// * count(base_compensation, [bucket(1000, 10000), bucket(10000, 100000),
    /// bucket(100000, MAX)])
    /// * count(string_custom_attribute["some-string-custom-attribute"])
    /// * count(numeric_custom_attribute["some-numeric-custom-attribute"],
    /// [bucket(MIN, 0, "negative"), bucket(0, MAX, "non-negative"])
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.HistogramQuery> HistogramQueries {
      get { return histogramQueries_; }
    }

    /// <summary>Field number for the "job_view" field.</summary>
    public const int JobViewFieldNumber = 8;
    private global::Google.Cloud.Talent.V4Beta1.JobView jobView_ = 0;
    /// <summary>
    /// Optional.
    ///
    /// The desired job attributes returned for jobs in the
    /// search response. Defaults to [JobView.SMALL][] if no value is specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.JobView JobView {
      get { return jobView_; }
      set {
        jobView_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 9;
    private int offset_;
    /// <summary>
    /// Optional.
    ///
    /// An integer that specifies the current offset (that is, starting result
    /// location, amongst the jobs deemed by the API as relevant) in search
    /// results. This field is only considered if [page_token][google.cloud.talent.v4beta1.SearchJobsRequest.page_token] is unset.
    ///
    /// For example, 0 means to  return results starting from the first matching
    /// job, and 10 means to return from the 11th job. This can be used for
    /// pagination, (for example, pageSize = 10 and offset = 10 means to return
    /// from the second page).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 10;
    private int pageSize_;
    /// <summary>
    /// Optional.
    ///
    /// A limit on the number of jobs returned in the search results.
    /// Increasing this value above the default value of 10 can increase search
    /// response time. The value can be between 1 and 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 11;
    private string pageToken_ = "";
    /// <summary>
    /// Optional.
    ///
    /// The token specifying the current offset within
    /// search results. See [SearchJobsResponse.next_page_token][google.cloud.talent.v4beta1.SearchJobsResponse.next_page_token] for
    /// an explanation of how to obtain the next set of query results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 12;
    private string orderBy_ = "";
    /// <summary>
    /// Optional.
    ///
    /// The criteria determining how search results are sorted. Default is
    /// "relevance desc".
    ///
    /// Supported options are:
    ///
    /// * "relevance desc": By relevance descending, as determined by the API
    /// algorithms. Relevance thresholding of query results is only available
    /// with this ordering.
    /// * "posting`_`publish`_`time desc": By [Job.posting_publish_time][google.cloud.talent.v4beta1.Job.posting_publish_time]
    /// descending.
    /// * "posting`_`update`_`time desc": By [Job.posting_update_time][google.cloud.talent.v4beta1.Job.posting_update_time]
    /// descending.
    /// * "title": By [Job.title][google.cloud.talent.v4beta1.Job.title] ascending.
    /// * "title desc": By [Job.title][google.cloud.talent.v4beta1.Job.title] descending.
    /// * "annualized`_`base`_`compensation": By job's
    /// [CompensationInfo.annualized_base_compensation_range][google.cloud.talent.v4beta1.CompensationInfo.annualized_base_compensation_range] ascending. Jobs
    /// whose annualized base compensation is unspecified are put at the end of
    /// search results.
    /// * "annualized`_`base`_`compensation desc": By job's
    /// [CompensationInfo.annualized_base_compensation_range][google.cloud.talent.v4beta1.CompensationInfo.annualized_base_compensation_range] descending. Jobs
    /// whose annualized base compensation is unspecified are put at the end of
    /// search results.
    /// * "annualized`_`total`_`compensation": By job's
    /// [CompensationInfo.annualized_total_compensation_range][google.cloud.talent.v4beta1.CompensationInfo.annualized_total_compensation_range] ascending. Jobs
    /// whose annualized base compensation is unspecified are put at the end of
    /// search results.
    /// * "annualized`_`total`_`compensation desc": By job's
    /// [CompensationInfo.annualized_total_compensation_range][google.cloud.talent.v4beta1.CompensationInfo.annualized_total_compensation_range] descending. Jobs
    /// whose annualized base compensation is unspecified are put at the end of
    /// search results.
    /// * "custom`_`ranking desc": By the relevance score adjusted to the
    /// [SearchJobsRequest.custom_ranking_info.ranking_expression][] with weight
    /// factor assigned by
    /// [SearchJobsRequest.custom_ranking_info.importance_level][] in descending
    /// order.
    /// * "location`_`distance": By the distance between the location on jobs and
    ///  locations specified in the
    /// [SearchJobsRequest.job_query.location_filters][].
    /// When this order is selected, the
    /// [SearchJobsRequest.job_query.location_filters][] must not be empty. When
    /// a job has multiple locations, the location closest to one of the locations
    /// specified in the location filter will be used to calculate location
    /// distance. Distance is calculated by the distance between two lat/long
    /// coordinates, with a precision of 10e-4 degrees (11.3 meters).
    /// Jobs that don't have locations specified will be ranked below jobs having
    /// locations.
    /// Diversification strategy is still applied unless explicitly disabled in
    /// [SearchJobsRequest.diversification_level][google.cloud.talent.v4beta1.SearchJobsRequest.diversification_level].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "diversification_level" field.</summary>
    public const int DiversificationLevelFieldNumber = 13;
    private global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.DiversificationLevel diversificationLevel_ = 0;
    /// <summary>
    /// Optional.
    ///
    /// Controls whether highly similar jobs are returned next to each other in
    /// the search results. Jobs are identified as highly similar based on
    /// their titles, job categories, and locations. Highly similar results are
    /// clustered so that only one representative job of the cluster is
    /// displayed to the job seeker higher up in the results, with the other jobs
    /// being displayed lower down in the results.
    ///
    /// Defaults to [DiversificationLevel.SIMPLE][google.cloud.talent.v4beta1.SearchJobsRequest.DiversificationLevel.SIMPLE] if no value
    /// is specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.DiversificationLevel DiversificationLevel {
      get { return diversificationLevel_; }
      set {
        diversificationLevel_ = value;
      }
    }

    /// <summary>Field number for the "custom_ranking_info" field.</summary>
    public const int CustomRankingInfoFieldNumber = 14;
    private global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo customRankingInfo_;
    /// <summary>
    /// Optional.
    ///
    /// Controls over how job documents get ranked on top of existing relevance
    /// score (determined by API algorithm).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo CustomRankingInfo {
      get { return customRankingInfo_; }
      set {
        customRankingInfo_ = value;
      }
    }

    /// <summary>Field number for the "disable_keyword_match" field.</summary>
    public const int DisableKeywordMatchFieldNumber = 16;
    private bool disableKeywordMatch_;
    /// <summary>
    /// Optional.
    ///
    /// Controls whether to disable exact keyword match on [Job.job_title][],
    /// [Job.description][google.cloud.talent.v4beta1.Job.description], [Job.company_display_name][google.cloud.talent.v4beta1.Job.company_display_name], [Job.locations][0],
    /// [Job.qualifications][google.cloud.talent.v4beta1.Job.qualifications]. When disable keyword match is turned off, a
    /// keyword match returns jobs that do not match given category filters when
    /// there are matching keywords. For example, for the query "program manager,"
    /// a result is returned even if the job posting has the title "software
    /// developer," which doesn't fall into "program manager" ontology, but does
    /// have "program manager" appearing in its description.
    ///
    /// For queries like "cloud" that don't contain title or
    /// location specific ontology, jobs with "cloud" keyword matches are returned
    /// regardless of this flag's value.
    ///
    /// Please use [Company.keyword_searchable_custom_fields][] or
    /// [Company.keyword_searchable_custom_attributes][] if company specific
    /// globally matched custom field/attribute string values is needed. Enabling
    /// keyword match improves recall of subsequent search requests.
    ///
    /// Defaults to false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DisableKeywordMatch {
      get { return disableKeywordMatch_; }
      set {
        disableKeywordMatch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (SearchMode != other.SearchMode) return false;
      if (!object.Equals(RequestMetadata, other.RequestMetadata)) return false;
      if (!object.Equals(JobQuery, other.JobQuery)) return false;
      if (EnableBroadening != other.EnableBroadening) return false;
      if (RequirePreciseResultSize != other.RequirePreciseResultSize) return false;
      if(!histogramQueries_.Equals(other.histogramQueries_)) return false;
      if (JobView != other.JobView) return false;
      if (Offset != other.Offset) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (OrderBy != other.OrderBy) return false;
      if (DiversificationLevel != other.DiversificationLevel) return false;
      if (!object.Equals(CustomRankingInfo, other.CustomRankingInfo)) return false;
      if (DisableKeywordMatch != other.DisableKeywordMatch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (SearchMode != 0) hash ^= SearchMode.GetHashCode();
      if (requestMetadata_ != null) hash ^= RequestMetadata.GetHashCode();
      if (jobQuery_ != null) hash ^= JobQuery.GetHashCode();
      if (EnableBroadening != false) hash ^= EnableBroadening.GetHashCode();
      if (RequirePreciseResultSize != false) hash ^= RequirePreciseResultSize.GetHashCode();
      hash ^= histogramQueries_.GetHashCode();
      if (JobView != 0) hash ^= JobView.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (DiversificationLevel != 0) hash ^= DiversificationLevel.GetHashCode();
      if (customRankingInfo_ != null) hash ^= CustomRankingInfo.GetHashCode();
      if (DisableKeywordMatch != false) hash ^= DisableKeywordMatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (SearchMode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SearchMode);
      }
      if (requestMetadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RequestMetadata);
      }
      if (jobQuery_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(JobQuery);
      }
      if (EnableBroadening != false) {
        output.WriteRawTag(40);
        output.WriteBool(EnableBroadening);
      }
      if (RequirePreciseResultSize != false) {
        output.WriteRawTag(48);
        output.WriteBool(RequirePreciseResultSize);
      }
      histogramQueries_.WriteTo(output, _repeated_histogramQueries_codec);
      if (JobView != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) JobView);
      }
      if (Offset != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Offset);
      }
      if (PageSize != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(PageToken);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OrderBy);
      }
      if (DiversificationLevel != 0) {
        output.WriteRawTag(104);
        output.WriteEnum((int) DiversificationLevel);
      }
      if (customRankingInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(CustomRankingInfo);
      }
      if (DisableKeywordMatch != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(DisableKeywordMatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (SearchMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SearchMode);
      }
      if (requestMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestMetadata);
      }
      if (jobQuery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobQuery);
      }
      if (EnableBroadening != false) {
        size += 1 + 1;
      }
      if (RequirePreciseResultSize != false) {
        size += 1 + 1;
      }
      size += histogramQueries_.CalculateSize(_repeated_histogramQueries_codec);
      if (JobView != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JobView);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (DiversificationLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DiversificationLevel);
      }
      if (customRankingInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomRankingInfo);
      }
      if (DisableKeywordMatch != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.SearchMode != 0) {
        SearchMode = other.SearchMode;
      }
      if (other.requestMetadata_ != null) {
        if (requestMetadata_ == null) {
          RequestMetadata = new global::Google.Cloud.Talent.V4Beta1.RequestMetadata();
        }
        RequestMetadata.MergeFrom(other.RequestMetadata);
      }
      if (other.jobQuery_ != null) {
        if (jobQuery_ == null) {
          JobQuery = new global::Google.Cloud.Talent.V4Beta1.JobQuery();
        }
        JobQuery.MergeFrom(other.JobQuery);
      }
      if (other.EnableBroadening != false) {
        EnableBroadening = other.EnableBroadening;
      }
      if (other.RequirePreciseResultSize != false) {
        RequirePreciseResultSize = other.RequirePreciseResultSize;
      }
      histogramQueries_.Add(other.histogramQueries_);
      if (other.JobView != 0) {
        JobView = other.JobView;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.DiversificationLevel != 0) {
        DiversificationLevel = other.DiversificationLevel;
      }
      if (other.customRankingInfo_ != null) {
        if (customRankingInfo_ == null) {
          CustomRankingInfo = new global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo();
        }
        CustomRankingInfo.MergeFrom(other.CustomRankingInfo);
      }
      if (other.DisableKeywordMatch != false) {
        DisableKeywordMatch = other.DisableKeywordMatch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            SearchMode = (global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.SearchMode) input.ReadEnum();
            break;
          }
          case 26: {
            if (requestMetadata_ == null) {
              RequestMetadata = new global::Google.Cloud.Talent.V4Beta1.RequestMetadata();
            }
            input.ReadMessage(RequestMetadata);
            break;
          }
          case 34: {
            if (jobQuery_ == null) {
              JobQuery = new global::Google.Cloud.Talent.V4Beta1.JobQuery();
            }
            input.ReadMessage(JobQuery);
            break;
          }
          case 40: {
            EnableBroadening = input.ReadBool();
            break;
          }
          case 48: {
            RequirePreciseResultSize = input.ReadBool();
            break;
          }
          case 58: {
            histogramQueries_.AddEntriesFrom(input, _repeated_histogramQueries_codec);
            break;
          }
          case 64: {
            JobView = (global::Google.Cloud.Talent.V4Beta1.JobView) input.ReadEnum();
            break;
          }
          case 72: {
            Offset = input.ReadInt32();
            break;
          }
          case 80: {
            PageSize = input.ReadInt32();
            break;
          }
          case 90: {
            PageToken = input.ReadString();
            break;
          }
          case 98: {
            OrderBy = input.ReadString();
            break;
          }
          case 104: {
            DiversificationLevel = (global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.DiversificationLevel) input.ReadEnum();
            break;
          }
          case 114: {
            if (customRankingInfo_ == null) {
              CustomRankingInfo = new global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo();
            }
            input.ReadMessage(CustomRankingInfo);
            break;
          }
          case 128: {
            DisableKeywordMatch = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SearchJobsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A string-represented enumeration of the job search mode. The service
      /// operate differently for different modes of service.
      /// </summary>
      public enum SearchMode {
        /// <summary>
        /// The mode of the search method isn't specified.
        /// </summary>
        [pbr::OriginalName("SEARCH_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The job search matches against all jobs, and featured jobs
        /// (jobs with promotionValue > 0) are not specially handled.
        /// </summary>
        [pbr::OriginalName("JOB_SEARCH")] JobSearch = 1,
        /// <summary>
        /// The job search matches only against featured jobs (jobs with a
        /// promotionValue > 0). This method doesn't return any jobs having a
        /// promotionValue &lt;= 0. The search results order is determined by the
        /// promotionValue (jobs with a higher promotionValue are returned higher up
        /// in the search results), with relevance being used as a tiebreaker.
        /// </summary>
        [pbr::OriginalName("FEATURED_JOB_SEARCH")] FeaturedJobSearch = 2,
      }

      /// <summary>
      /// Controls whether highly similar jobs are returned next to each other in
      /// the search results. Jobs are identified as highly similar based on
      /// their titles, job categories, and locations. Highly similar results are
      /// clustered so that only one representative job of the cluster is
      /// displayed to the job seeker higher up in the results, with the other jobs
      /// being displayed lower down in the results.
      /// </summary>
      public enum DiversificationLevel {
        /// <summary>
        /// The diversification level isn't specified.
        /// </summary>
        [pbr::OriginalName("DIVERSIFICATION_LEVEL_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Disables diversification. Jobs that would normally be pushed to the last
        /// page would not have their positions altered. This may result in highly
        /// similar jobs appearing in sequence in the search results.
        /// </summary>
        [pbr::OriginalName("DISABLED")] Disabled = 1,
        /// <summary>
        /// Default diversifying behavior. The result list is ordered so that
        /// highly similar results are pushed to the end of the last page of search
        /// results.
        /// </summary>
        [pbr::OriginalName("SIMPLE")] Simple = 2,
      }

      /// <summary>
      /// Input only.
      ///
      /// Custom ranking information for [SearchJobsRequest][google.cloud.talent.v4beta1.SearchJobsRequest].
      /// </summary>
      public sealed partial class CustomRankingInfo : pb::IMessage<CustomRankingInfo> {
        private static readonly pb::MessageParser<CustomRankingInfo> _parser = new pb::MessageParser<CustomRankingInfo>(() => new CustomRankingInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CustomRankingInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CustomRankingInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CustomRankingInfo(CustomRankingInfo other) : this() {
          importanceLevel_ = other.importanceLevel_;
          rankingExpression_ = other.rankingExpression_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CustomRankingInfo Clone() {
          return new CustomRankingInfo(this);
        }

        /// <summary>Field number for the "importance_level" field.</summary>
        public const int ImportanceLevelFieldNumber = 1;
        private global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo.Types.ImportanceLevel importanceLevel_ = 0;
        /// <summary>
        /// Required.
        ///
        /// Controls over how important the score of
        /// [CustomRankingInfo.ranking_expression][google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.ranking_expression] gets applied to job's final
        /// ranking position.
        ///
        /// An error is thrown if not specified.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo.Types.ImportanceLevel ImportanceLevel {
          get { return importanceLevel_; }
          set {
            importanceLevel_ = value;
          }
        }

        /// <summary>Field number for the "ranking_expression" field.</summary>
        public const int RankingExpressionFieldNumber = 2;
        private string rankingExpression_ = "";
        /// <summary>
        /// Required.
        ///
        /// Controls over how job documents get ranked on top of existing relevance
        /// score (determined by API algorithm). The product of ranking expression
        /// and relevance score is used to determine job's final ranking position.
        ///
        /// The syntax for this expression is a subset of Google SQL syntax.
        ///
        /// Supported operators are: +, -, *, /, where the left and right side of
        /// the operator is either a numeric [Job.custom_attributes][google.cloud.talent.v4beta1.Job.custom_attributes] key,
        /// integer/double value or an expression that can be evaluated to a number.
        ///
        /// Parenthesis are supported to adjust calculation precedence. The
        /// expression must be &lt; 100 characters in length.
        ///
        /// Sample ranking expression
        /// (year + 25) * 0.25 - (freshness / 0.5)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RankingExpression {
          get { return rankingExpression_; }
          set {
            rankingExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CustomRankingInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CustomRankingInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ImportanceLevel != other.ImportanceLevel) return false;
          if (RankingExpression != other.RankingExpression) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ImportanceLevel != 0) hash ^= ImportanceLevel.GetHashCode();
          if (RankingExpression.Length != 0) hash ^= RankingExpression.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ImportanceLevel != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ImportanceLevel);
          }
          if (RankingExpression.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RankingExpression);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ImportanceLevel != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImportanceLevel);
          }
          if (RankingExpression.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RankingExpression);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CustomRankingInfo other) {
          if (other == null) {
            return;
          }
          if (other.ImportanceLevel != 0) {
            ImportanceLevel = other.ImportanceLevel;
          }
          if (other.RankingExpression.Length != 0) {
            RankingExpression = other.RankingExpression;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ImportanceLevel = (global::Google.Cloud.Talent.V4Beta1.SearchJobsRequest.Types.CustomRankingInfo.Types.ImportanceLevel) input.ReadEnum();
                break;
              }
              case 18: {
                RankingExpression = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CustomRankingInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// The importance level for [CustomRankingInfo.ranking_expression][google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.ranking_expression].
          /// </summary>
          public enum ImportanceLevel {
            /// <summary>
            /// Default value if the importance level isn't specified.
            /// </summary>
            [pbr::OriginalName("IMPORTANCE_LEVEL_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The given ranking expression is of None importance, existing relevance
            /// score (determined by API algorithm) dominates job's final ranking
            /// position.
            /// </summary>
            [pbr::OriginalName("NONE")] None = 1,
            /// <summary>
            /// The given ranking expression is of Low importance in terms of job's
            /// final ranking position compared to existing relevance
            /// score (determined by API algorithm).
            /// </summary>
            [pbr::OriginalName("LOW")] Low = 2,
            /// <summary>
            /// The given ranking expression is of Mild importance in terms of job's
            /// final ranking position compared to existing relevance
            /// score (determined by API algorithm).
            /// </summary>
            [pbr::OriginalName("MILD")] Mild = 3,
            /// <summary>
            /// The given ranking expression is of Medium importance in terms of job's
            /// final ranking position compared to existing relevance
            /// score (determined by API algorithm).
            /// </summary>
            [pbr::OriginalName("MEDIUM")] Medium = 4,
            /// <summary>
            /// The given ranking expression is of High importance in terms of job's
            /// final ranking position compared to existing relevance
            /// score (determined by API algorithm).
            /// </summary>
            [pbr::OriginalName("HIGH")] High = 5,
            /// <summary>
            /// The given ranking expression is of Extreme importance, and dominates
            /// job's final ranking position with existing relevance
            /// score (determined by API algorithm) ignored.
            /// </summary>
            [pbr::OriginalName("EXTREME")] Extreme = 6,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Output only.
  ///
  /// Response for SearchJob method.
  /// </summary>
  public sealed partial class SearchJobsResponse : pb::IMessage<SearchJobsResponse> {
    private static readonly pb::MessageParser<SearchJobsResponse> _parser = new pb::MessageParser<SearchJobsResponse>(() => new SearchJobsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchJobsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.JobServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchJobsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchJobsResponse(SearchJobsResponse other) : this() {
      matchingJobs_ = other.matchingJobs_.Clone();
      histogramQueryResults_ = other.histogramQueryResults_.Clone();
      nextPageToken_ = other.nextPageToken_;
      locationFilters_ = other.locationFilters_.Clone();
      estimatedTotalSize_ = other.estimatedTotalSize_;
      totalSize_ = other.totalSize_;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      broadenedQueryJobsCount_ = other.broadenedQueryJobsCount_;
      spellCorrection_ = other.spellCorrection_ != null ? other.spellCorrection_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchJobsResponse Clone() {
      return new SearchJobsResponse(this);
    }

    /// <summary>Field number for the "matching_jobs" field.</summary>
    public const int MatchingJobsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.MatchingJob> _repeated_matchingJobs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.MatchingJob.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.MatchingJob> matchingJobs_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.MatchingJob>();
    /// <summary>
    /// The Job entities that match the specified [SearchJobsRequest][google.cloud.talent.v4beta1.SearchJobsRequest].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.MatchingJob> MatchingJobs {
      get { return matchingJobs_; }
    }

    /// <summary>Field number for the "histogram_query_results" field.</summary>
    public const int HistogramQueryResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.HistogramQueryResult> _repeated_histogramQueryResults_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Talent.V4Beta1.HistogramQueryResult.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.HistogramQueryResult> histogramQueryResults_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.HistogramQueryResult>();
    /// <summary>
    /// The histogram results that match with specified
    /// [SearchJobsRequest.histogram_queries][google.cloud.talent.v4beta1.SearchJobsRequest.histogram_queries].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.HistogramQueryResult> HistogramQueryResults {
      get { return histogramQueryResults_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 3;
    private string nextPageToken_ = "";
    /// <summary>
    /// The token that specifies the starting position of the next page of results.
    /// This field is empty if there are no more results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_filters" field.</summary>
    public const int LocationFiltersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.Location> _repeated_locationFilters_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Talent.V4Beta1.Location.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.Location> locationFilters_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.Location>();
    /// <summary>
    /// The location filters that the service applied to the specified query. If
    /// any filters are lat-lng based, the [JobLocation.location_type][] is
    /// [JobLocation.LocationType#LOCATION_TYPE_UNSPECIFIED][].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.Location> LocationFilters {
      get { return locationFilters_; }
    }

    /// <summary>Field number for the "estimated_total_size" field.</summary>
    public const int EstimatedTotalSizeFieldNumber = 5;
    private int estimatedTotalSize_;
    /// <summary>
    /// An estimation of the number of jobs that match the specified query.
    ///
    /// This number isn't guaranteed to be accurate. For accurate results,
    /// see [enable_precise_result_size][].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EstimatedTotalSize {
      get { return estimatedTotalSize_; }
      set {
        estimatedTotalSize_ = value;
      }
    }

    /// <summary>Field number for the "total_size" field.</summary>
    public const int TotalSizeFieldNumber = 6;
    private int totalSize_;
    /// <summary>
    /// The precise result count, which is available only if the client set
    /// [enable_precise_result_size][] to `true`, or if the response
    /// is the last page of results. Otherwise, the value is `-1`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalSize {
      get { return totalSize_; }
      set {
        totalSize_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 7;
    private global::Google.Cloud.Talent.V4Beta1.ResponseMetadata metadata_;
    /// <summary>
    /// Additional information for the API invocation, such as the request
    /// tracking id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.ResponseMetadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "broadened_query_jobs_count" field.</summary>
    public const int BroadenedQueryJobsCountFieldNumber = 8;
    private int broadenedQueryJobsCount_;
    /// <summary>
    /// If query broadening is enabled, we may append additional results from the
    /// broadened query. This number indicates how many of the jobs returned in the
    /// jobs field are from the broadened query. These results are always at the
    /// end of the jobs list. In particular, a value of 0, or if the field isn't
    /// set, all the jobs in the jobs list are from the original
    /// (without broadening) query. If this field is non-zero, subsequent requests
    /// with offset after this result set should contain all broadened results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BroadenedQueryJobsCount {
      get { return broadenedQueryJobsCount_; }
      set {
        broadenedQueryJobsCount_ = value;
      }
    }

    /// <summary>Field number for the "spell_correction" field.</summary>
    public const int SpellCorrectionFieldNumber = 9;
    private global::Google.Cloud.Talent.V4Beta1.SpellingCorrection spellCorrection_;
    /// <summary>
    /// The spell checking result, and correction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.SpellingCorrection SpellCorrection {
      get { return spellCorrection_; }
      set {
        spellCorrection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchJobsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchJobsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!matchingJobs_.Equals(other.matchingJobs_)) return false;
      if(!histogramQueryResults_.Equals(other.histogramQueryResults_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if(!locationFilters_.Equals(other.locationFilters_)) return false;
      if (EstimatedTotalSize != other.EstimatedTotalSize) return false;
      if (TotalSize != other.TotalSize) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (BroadenedQueryJobsCount != other.BroadenedQueryJobsCount) return false;
      if (!object.Equals(SpellCorrection, other.SpellCorrection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= matchingJobs_.GetHashCode();
      hash ^= histogramQueryResults_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      hash ^= locationFilters_.GetHashCode();
      if (EstimatedTotalSize != 0) hash ^= EstimatedTotalSize.GetHashCode();
      if (TotalSize != 0) hash ^= TotalSize.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (BroadenedQueryJobsCount != 0) hash ^= BroadenedQueryJobsCount.GetHashCode();
      if (spellCorrection_ != null) hash ^= SpellCorrection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      matchingJobs_.WriteTo(output, _repeated_matchingJobs_codec);
      histogramQueryResults_.WriteTo(output, _repeated_histogramQueryResults_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NextPageToken);
      }
      locationFilters_.WriteTo(output, _repeated_locationFilters_codec);
      if (EstimatedTotalSize != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EstimatedTotalSize);
      }
      if (TotalSize != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalSize);
      }
      if (metadata_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Metadata);
      }
      if (BroadenedQueryJobsCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BroadenedQueryJobsCount);
      }
      if (spellCorrection_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SpellCorrection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += matchingJobs_.CalculateSize(_repeated_matchingJobs_codec);
      size += histogramQueryResults_.CalculateSize(_repeated_histogramQueryResults_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      size += locationFilters_.CalculateSize(_repeated_locationFilters_codec);
      if (EstimatedTotalSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EstimatedTotalSize);
      }
      if (TotalSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalSize);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (BroadenedQueryJobsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BroadenedQueryJobsCount);
      }
      if (spellCorrection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpellCorrection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchJobsResponse other) {
      if (other == null) {
        return;
      }
      matchingJobs_.Add(other.matchingJobs_);
      histogramQueryResults_.Add(other.histogramQueryResults_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      locationFilters_.Add(other.locationFilters_);
      if (other.EstimatedTotalSize != 0) {
        EstimatedTotalSize = other.EstimatedTotalSize;
      }
      if (other.TotalSize != 0) {
        TotalSize = other.TotalSize;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Google.Cloud.Talent.V4Beta1.ResponseMetadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.BroadenedQueryJobsCount != 0) {
        BroadenedQueryJobsCount = other.BroadenedQueryJobsCount;
      }
      if (other.spellCorrection_ != null) {
        if (spellCorrection_ == null) {
          SpellCorrection = new global::Google.Cloud.Talent.V4Beta1.SpellingCorrection();
        }
        SpellCorrection.MergeFrom(other.SpellCorrection);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            matchingJobs_.AddEntriesFrom(input, _repeated_matchingJobs_codec);
            break;
          }
          case 18: {
            histogramQueryResults_.AddEntriesFrom(input, _repeated_histogramQueryResults_codec);
            break;
          }
          case 26: {
            NextPageToken = input.ReadString();
            break;
          }
          case 34: {
            locationFilters_.AddEntriesFrom(input, _repeated_locationFilters_codec);
            break;
          }
          case 40: {
            EstimatedTotalSize = input.ReadInt32();
            break;
          }
          case 48: {
            TotalSize = input.ReadInt32();
            break;
          }
          case 58: {
            if (metadata_ == null) {
              Metadata = new global::Google.Cloud.Talent.V4Beta1.ResponseMetadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 64: {
            BroadenedQueryJobsCount = input.ReadInt32();
            break;
          }
          case 74: {
            if (spellCorrection_ == null) {
              SpellCorrection = new global::Google.Cloud.Talent.V4Beta1.SpellingCorrection();
            }
            input.ReadMessage(SpellCorrection);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SearchJobsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Output only.
      ///
      /// Job entry with metadata inside [SearchJobsResponse][google.cloud.talent.v4beta1.SearchJobsResponse].
      /// </summary>
      public sealed partial class MatchingJob : pb::IMessage<MatchingJob> {
        private static readonly pb::MessageParser<MatchingJob> _parser = new pb::MessageParser<MatchingJob>(() => new MatchingJob());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MatchingJob> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatchingJob() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatchingJob(MatchingJob other) : this() {
          job_ = other.job_ != null ? other.job_.Clone() : null;
          jobSummary_ = other.jobSummary_;
          jobTitleSnippet_ = other.jobTitleSnippet_;
          searchTextSnippet_ = other.searchTextSnippet_;
          commuteInfo_ = other.commuteInfo_ != null ? other.commuteInfo_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatchingJob Clone() {
          return new MatchingJob(this);
        }

        /// <summary>Field number for the "job" field.</summary>
        public const int JobFieldNumber = 1;
        private global::Google.Cloud.Talent.V4Beta1.Job job_;
        /// <summary>
        /// Job resource that matches the specified [SearchJobsRequest][google.cloud.talent.v4beta1.SearchJobsRequest].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Talent.V4Beta1.Job Job {
          get { return job_; }
          set {
            job_ = value;
          }
        }

        /// <summary>Field number for the "job_summary" field.</summary>
        public const int JobSummaryFieldNumber = 2;
        private string jobSummary_ = "";
        /// <summary>
        /// A summary of the job with core information that's displayed on the search
        /// results listing page.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string JobSummary {
          get { return jobSummary_; }
          set {
            jobSummary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "job_title_snippet" field.</summary>
        public const int JobTitleSnippetFieldNumber = 3;
        private string jobTitleSnippet_ = "";
        /// <summary>
        /// Contains snippets of text from the [Job.job_title][] field most
        /// closely matching a search query's keywords, if available. The matching
        /// query keywords are enclosed in HTML bold tags.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string JobTitleSnippet {
          get { return jobTitleSnippet_; }
          set {
            jobTitleSnippet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "search_text_snippet" field.</summary>
        public const int SearchTextSnippetFieldNumber = 4;
        private string searchTextSnippet_ = "";
        /// <summary>
        /// Contains snippets of text from the [Job.description][google.cloud.talent.v4beta1.Job.description] and similar
        /// fields that most closely match a search query's keywords, if available.
        /// All HTML tags in the original fields are stripped when returned in this
        /// field, and matching query keywords are enclosed in HTML bold tags.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SearchTextSnippet {
          get { return searchTextSnippet_; }
          set {
            searchTextSnippet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "commute_info" field.</summary>
        public const int CommuteInfoFieldNumber = 5;
        private global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.CommuteInfo commuteInfo_;
        /// <summary>
        /// Commute information which is generated based on specified
        ///  [CommuteFilter][google.cloud.talent.v4beta1.CommuteFilter].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.CommuteInfo CommuteInfo {
          get { return commuteInfo_; }
          set {
            commuteInfo_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MatchingJob);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MatchingJob other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Job, other.Job)) return false;
          if (JobSummary != other.JobSummary) return false;
          if (JobTitleSnippet != other.JobTitleSnippet) return false;
          if (SearchTextSnippet != other.SearchTextSnippet) return false;
          if (!object.Equals(CommuteInfo, other.CommuteInfo)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (job_ != null) hash ^= Job.GetHashCode();
          if (JobSummary.Length != 0) hash ^= JobSummary.GetHashCode();
          if (JobTitleSnippet.Length != 0) hash ^= JobTitleSnippet.GetHashCode();
          if (SearchTextSnippet.Length != 0) hash ^= SearchTextSnippet.GetHashCode();
          if (commuteInfo_ != null) hash ^= CommuteInfo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (job_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Job);
          }
          if (JobSummary.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(JobSummary);
          }
          if (JobTitleSnippet.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(JobTitleSnippet);
          }
          if (SearchTextSnippet.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SearchTextSnippet);
          }
          if (commuteInfo_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(CommuteInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (job_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Job);
          }
          if (JobSummary.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(JobSummary);
          }
          if (JobTitleSnippet.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTitleSnippet);
          }
          if (SearchTextSnippet.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchTextSnippet);
          }
          if (commuteInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommuteInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MatchingJob other) {
          if (other == null) {
            return;
          }
          if (other.job_ != null) {
            if (job_ == null) {
              Job = new global::Google.Cloud.Talent.V4Beta1.Job();
            }
            Job.MergeFrom(other.Job);
          }
          if (other.JobSummary.Length != 0) {
            JobSummary = other.JobSummary;
          }
          if (other.JobTitleSnippet.Length != 0) {
            JobTitleSnippet = other.JobTitleSnippet;
          }
          if (other.SearchTextSnippet.Length != 0) {
            SearchTextSnippet = other.SearchTextSnippet;
          }
          if (other.commuteInfo_ != null) {
            if (commuteInfo_ == null) {
              CommuteInfo = new global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.CommuteInfo();
            }
            CommuteInfo.MergeFrom(other.CommuteInfo);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (job_ == null) {
                  Job = new global::Google.Cloud.Talent.V4Beta1.Job();
                }
                input.ReadMessage(Job);
                break;
              }
              case 18: {
                JobSummary = input.ReadString();
                break;
              }
              case 26: {
                JobTitleSnippet = input.ReadString();
                break;
              }
              case 34: {
                SearchTextSnippet = input.ReadString();
                break;
              }
              case 42: {
                if (commuteInfo_ == null) {
                  CommuteInfo = new global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Types.CommuteInfo();
                }
                input.ReadMessage(CommuteInfo);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Output only.
      ///
      /// Commute details related to this job.
      /// </summary>
      public sealed partial class CommuteInfo : pb::IMessage<CommuteInfo> {
        private static readonly pb::MessageParser<CommuteInfo> _parser = new pb::MessageParser<CommuteInfo>(() => new CommuteInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CommuteInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Talent.V4Beta1.SearchJobsResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommuteInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommuteInfo(CommuteInfo other) : this() {
          jobLocation_ = other.jobLocation_ != null ? other.jobLocation_.Clone() : null;
          travelDuration_ = other.travelDuration_ != null ? other.travelDuration_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommuteInfo Clone() {
          return new CommuteInfo(this);
        }

        /// <summary>Field number for the "job_location" field.</summary>
        public const int JobLocationFieldNumber = 1;
        private global::Google.Cloud.Talent.V4Beta1.Location jobLocation_;
        /// <summary>
        /// Location used as the destination in the commute calculation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Talent.V4Beta1.Location JobLocation {
          get { return jobLocation_; }
          set {
            jobLocation_ = value;
          }
        }

        /// <summary>Field number for the "travel_duration" field.</summary>
        public const int TravelDurationFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Duration travelDuration_;
        /// <summary>
        /// The number of seconds required to travel to the job location from the
        /// query location. A duration of 0 seconds indicates that the job isn't
        /// reachable within the requested duration, but was returned as part of an
        /// expanded query.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Duration TravelDuration {
          get { return travelDuration_; }
          set {
            travelDuration_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CommuteInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CommuteInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(JobLocation, other.JobLocation)) return false;
          if (!object.Equals(TravelDuration, other.TravelDuration)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (jobLocation_ != null) hash ^= JobLocation.GetHashCode();
          if (travelDuration_ != null) hash ^= TravelDuration.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (jobLocation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(JobLocation);
          }
          if (travelDuration_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(TravelDuration);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (jobLocation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobLocation);
          }
          if (travelDuration_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TravelDuration);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CommuteInfo other) {
          if (other == null) {
            return;
          }
          if (other.jobLocation_ != null) {
            if (jobLocation_ == null) {
              JobLocation = new global::Google.Cloud.Talent.V4Beta1.Location();
            }
            JobLocation.MergeFrom(other.JobLocation);
          }
          if (other.travelDuration_ != null) {
            if (travelDuration_ == null) {
              TravelDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            TravelDuration.MergeFrom(other.TravelDuration);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (jobLocation_ == null) {
                  JobLocation = new global::Google.Cloud.Talent.V4Beta1.Location();
                }
                input.ReadMessage(JobLocation);
                break;
              }
              case 18: {
                if (travelDuration_ == null) {
                  TravelDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(TravelDuration);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
